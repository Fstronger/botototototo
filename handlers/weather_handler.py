import os
import aiohttp
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import ContextTypes
from datetime import datetime
from utils.logger import log_event
import pytz

load_dotenv()
WEATHER_API_KEY = os.getenv("WEATHER_API_KEY")

TIMEZONE = "Asia/Almaty"

async def handle_weather(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–ª –≥–æ—Ä–æ–¥ ‚Äî –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ê—Å—Ç–∞–Ω–∞
    if not context.args:
        city = "–ê—Å—Ç–∞–Ω–∞"
    else:
        city = " ".join(context.args)

    url = "https://api.openweathermap.org/data/2.5/weather"
    params = {
        "q": city,
        "appid": WEATHER_API_KEY,
        "units": "metric",
        "lang": "ru"
    }

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, params=params) as resp:
                if resp.status != 200:
                    await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
                    log_event("WEATHER_ERROR", f"{city} ‚Äî HTTP {resp.status}")
                    return

                data = await resp.json()

                name = data["name"]
                if name == "–ù—É—Ä-–°—É–ª—Ç–∞–Ω":
                    name = "–ê—Å—Ç–∞–Ω–∞"
                weather_desc = data["weather"][0]["description"].capitalize()
                temp = round(data["main"]["temp"], 1)
                feels_like = round(data["main"]["feels_like"], 1)
                wind = round(data["wind"]["speed"])
                humidity = data["main"]["humidity"]

                # –í—Ä–µ–º—è –∏ –≤–æ—Å—Ö–æ–¥/–∑–∞–∫–∞—Ç
                tz = pytz.timezone(TIMEZONE)
                now = datetime.now(tz)
                time_str = now.strftime("%H:%M (%d.%m.%Y)")

                sunrise = datetime.fromtimestamp(data["sys"]["sunrise"], tz).strftime("%H:%M")
                sunset = datetime.fromtimestamp(data["sys"]["sunset"], tz).strftime("%H:%M")

                msg = (
                    f"üèô –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {name}:\n"
                    f"üå° –°–µ–π—á–∞—Å: {temp}¬∞C ({weather_desc})\n"
                    f"ü´Ç –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C\n"
                    f"üå¨ –í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
                    f"üí¶ –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                    f"‚è∞ –í—Ä–µ–º—è: {time_str}\n"
                    f"üåÖ –í–æ—Å—Ö–æ–¥: {sunrise} | üåá –ó–∞–∫–∞—Ç: {sunset}"
                )

                await update.message.reply_text(msg)
                log_event("WEATHER", f"{name}: {temp}¬∞C, {weather_desc}")

    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã.")
        log_event("WEATHER_ERROR", f"{city} ‚Äî {str(e)}")
